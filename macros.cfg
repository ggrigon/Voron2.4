[gcode_macro CLEAN_NOZZLE]
variable_start_x: 305 ;285
variable_start_y: 355 ;300
variable_start_z: 3.5
variable_wipe_dist: -65
variable_wipe_qty: 18
variable_wipe_spd: 200
variable_raise_distance: 30

variable_qgl_ran: False  ; Variável para verificar se o QGL foi executado


gcode:

   {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
   {% endif %}

   ; Verifica se o QGL foi executado usando uma variável de controle
   {% if not qgl_ran %}
     M117 Executando QGL... ; Mensagem no LCD
     QGL_LOW  ; Executa o nivelamento da cama
     SET_GCODE_VARIABLE MACRO=CLEAN_NOZZLE VARIABLE=qgl_ran VALUE=True  ; Define a flag como True
   {% endif %}

  M109 S220 ; wipe temp
  M117 Wipe Nozzle... ; progress indicator message on LCD
 
 G90                                            ; absolute positioning
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500

 M109 S0 ; set extruder temp to 0
 
 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}

   {% if wipes % 5 == 0 %}
     G1 Y{start_y - (wipes // 5)} F6000 ; Move 1mm para baixo no eixo Y a cada 5 passadas
   {% endif %}
   
 {% endfor %}

 ## Raise nozzle
 G1 Z{raise_distance}

 G1 E-5.0 F1800                 ; retract filament 5mm

  #M109 S0 ; set extruder temp to 0
  M117 Nozzle Clean... ; LCD message


[gcode_macro QGL_LOW]
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28  ; Faz o home de todos os eixos
    {% endif %}
    QUAD_GANTRY_LEVEL RETRY_TOLERANCE=0.2
    #QUAD_GANTRY_LEVEL HORIZONTAL_MOVE_Z=2


#####################################################################
#   print_start macro
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Z_TILT_ADJUST if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one

[gcode_macro PRINT_START]
gcode:
 
  CLEAN_NOZZLE
  STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)

  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}

  {% set filament_type = params.FILAMENT_TYPE %} 
  
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  #STATUS_HOMING         # Sets SB-leds to homing-mode
  #G28                   # Full home (XYZ)
  G90                   # Absolut position

  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore
    SET_FAN_SPEED FAN=nevermore SPEED=1  

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    #SET_DISPLAY_TEXT MSG="Soak for 5min"                # Displays info
    #G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
  {% endif %}

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
   {% if filament_type == "PLA" %}
      SET_DISPLAY_TEXT MSG="Printing PLA - Bed: {target_bed}c"           # Displays info
      STATUS_HEATING                                      # Sets SB-leds to heating-mode
      G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
   {% endif %}

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  quad_gantry_level               # Levels the buildplate via QGL
  G28 Z                           # Homes Z again after QGL

  ##  Uncomment for bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
  STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
  BED_MESH_CALIBRATE ADAPTIVE=1

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  LINE_PURGE

  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  SET_FAN_SPEED FAN=nevermore SPEED=0.5


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament 20mm
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    #G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    G0 X{th.axis_maximum.x // 2} Y{th.axis_maximum.y - 125} F3600  ; park nozzle 100mm do final do eixo Y
    G1 Z{th.position.z + 30} F20000  ; sobe 30mm da posição atual
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

    ###G4 P120  ; Pause for 2 minutes
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=180 # keep nevermore running 
    ###SET_PIN PIN=nevermore VALUE=0  ; Turn off the specified output pin by name


[gcode_macro CHAMBER_WARMER]
gcode:
    G28

    # Z position to park while warming
    {% set z = params.Z|default(5)|int %}

    # This creates a variable called ChamberTemp. If the macro is called without
    # setting a temperature, it will default to 40
    {% set chamberTemp = params.TEMPERATURE|default(40)|int %}
    
    # Move the toolhead over the bed at X60 Y60 Z5
    G90 # Absolute position
    G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{z}
    
    # Max out part cooling to cycle chamber air
    M106 S255

    SET_PIN PIN=nevermore VALUE=1.00
    
    # Warm up the bed
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110
    status_heating

    # Wait for extruder to get to chamberTemp
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chamberTemp}
    
    # Turn the part cooling fan off again
    M106 S0
     SET_PIN PIN=nevermore VALUE=0.00

